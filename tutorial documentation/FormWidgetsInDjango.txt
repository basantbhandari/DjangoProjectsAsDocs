Widget
==============
    A widget is Django's representation of ana HTML input element.

    The widget handles the rendering of the HTML, and the exraction of data from a GET/POST
        dictionary that corresponds to the widget.
    
    The HTML generated by the build-in widgets uses HTML5 syntax, targeting <!DOCTYPE html>.

    Whenever you specify a field on a form, Django will use a default widget that is appropriate to the
        type of data that is to be displayed.
    
    Each field type has an appropriate default Widget class, but these can be overridden as required.

    Form field deal with the logic of input validation and used directly in templates.

    Widgets deal with rendering of HTML form input elements on the web page and extraction of raw submitted data.

    Example:
        TextInput
        Textarea

    attrs : A dictionary containing HTML attributes to be set on the rendered widget.
    If you assign a value of True or Fase to an attribute, it will be rendered as an HTML5 boolean attribute.

    Example:
        feedback = forms.CharField(widget=forms.TextInput(attrs={'class':'somecss1 somecss2', 'id':'uniqueid'}))

    
    Built-in Widgets
    =================
    TextInput: It renders as: <input type='text' ...>
    Example: name = forms.CharField(widget=forms.TextInput)

    NumberInput : It renders as : <input type="number"...>
    EmailInput : It renders as : <input type="email"...>
    URLInput : It renders as: <input type="url"...>

    PasswordInput : It renders as: <input type="password"...>

    It take one optional argument render_value which determines whether the widget will have a value
    filled in when the form is re-displayed after a validation error (default is False).

    HiddenInput : It renders as : <input type="hidden"...>

    DateInput : It renders as : <input type='text'...>
    It take one optional argument format. The format in which this field's initial value will be displayed.

    If no format argument is provided, the default format is the first format found in

    DATE_INPUT_FORMATS.

    DateTimeInput : It renders as: <input type="text"...>




Refer to project p31 in django code









